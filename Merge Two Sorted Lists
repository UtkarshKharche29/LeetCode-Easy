Problem Statement:

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
Example:
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4



Solution:

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        head=new=ListNode(0)
        while l1 and l2:
            if l1.val<l2.val:
                new.next=l1
                l1=l1.next
                new=new.next
            elif l1.val>=l2.val:
                new.next=l2
                l2=l2.next
                new=new.next
        new.next=l1 or l2
        return head.next
