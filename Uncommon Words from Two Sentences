Problem Statement:

We are given two sentences A and B.  (A sentence is a string of space separated words.  Each word consists only of lowercase letters.)
A word is uncommon if it appears exactly once in one of the sentences, and does not appear in the other sentence.
Return a list of all uncommon words. 
You may return the list in any order.

Example 1:
Input: A = "this apple is sweet", B = "this apple is sour"
Output: ["sweet","sour"]

Example 2:
Input: A = "apple apple", B = "banana"
Output: ["banana"]
 

Solution:
class Solution:
    def uncommonFromSentences(self, A: str, B: str) -> List[str]:
        
        a=A.split(" ")
        b=B.split(" ")
        '''
        li=[]
        for i in set(a):
            if i not in b and a.count(i)==1:
                li.append(i)
        for i in set(b):
            if i not in a and b.count(i)==1:
                li.append(i)
        return(li)
        '''
        dict=collections.OrderedDict()
        li=[]
        for i in (a):
            try:
                dict[i]+=1
            except:
                dict[i]=1
        for i in (b):
            try:
                dict[i]+=1
            except:
                dict[i]=1
        
        for i in dict.keys():
            if dict[i]==1:
                li.append(i)
        return li
