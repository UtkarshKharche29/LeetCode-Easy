Problem Statement:

Given an array A of non-negative integers, half of the integers in A are odd, and half of the integers are even.
Sort the array so that whenever A[i] is odd, i is odd; and whenever A[i] is even, i is even.
You may return any answer array that satisfies this condition.


Example 1:
Input: [4,2,5,7]
Output: [4,5,2,7]
Explanation: [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.


Solution:
class Solution:
    def sortArrayByParityII(self, A: List[int]) -> List[int]:
        dict=collections.defaultdict(list)
        for i in A:
            if i%2==0:
                dict['ev'].append(i)
            else:
                dict['od'].append(i)
        res=[]
        for i,j in zip(dict['ev'],dict['od']):
            res.append(i)
            res.append(j)
        return res
