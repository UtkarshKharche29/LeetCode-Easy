Problem Statement:
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Example:
Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.


Solution:
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        maxval=nums[0]
        maxtill=nums[0]
        for i in range(1,len(nums)):
            if maxtill>0:
                maxtill=maxtill+nums[i]
            else:
                maxtill=nums[i]
            if maxtill>maxval:
                maxval=maxtill
            
        return maxval
