Problem Statement:

Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]
sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
Note:
You may assume that the array does not change.
There are many calls to sumRange function.


Solution:
class NumArray:

    def __init__(self, nums: List[int]):
        self.li=nums
        self.new=[0]*(len(self.li)+1)
        for each in range(len(self.li)):
            self.new[each+1]=self.new[each]+self.li[each]
            
    def sumRange(self, i: int, j: int) -> int:
        return self.new[j+1]-self.new[i]

# Your NumArray object will be instantiated and called as such:
# obj = NumArray(nums)
# param_1 = obj.sumRange(i,j)
