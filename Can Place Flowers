Problem Statement:

Suppose you have a long flowerbed in which some of the plots are planted and some are not. 
However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.
Given a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), 
and a number n, return if n new flowers can be planted in it without violating the no-adjacent-flowers rule.

Example 1:
Input: flowerbed = [1,0,0,0,1], n = 1
Output: True
Example 2:
Input: flowerbed = [1,0,0,0,1], n = 2
Output: False


Solution:
class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        cnt=0
        if len(flowerbed)==1:
            if flowerbed[0]==0 and n==1:
                return 1==n
            else:
                return 0==n
        
        for i in range(len(flowerbed)):
            if i==0:
                if flowerbed[i]==0 and flowerbed[i+1]==0:
                    flowerbed[i]=1
                    cnt+=1
            
            elif i==len(flowerbed)-1:
                if flowerbed[i]==0 and flowerbed[i-1]==0:
                    flowerbed[i]=1
                    cnt+=1
            elif flowerbed[i-1]==0 and flowerbed[i+1]==0:
                if flowerbed[i]!=1:
                    flowerbed[i]=1
                    cnt+=1
        return cnt>=n
                
            
