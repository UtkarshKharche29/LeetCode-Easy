Problem Statement:



Implement the following operations of a stack using queues.
push(x) -- Push element x onto stack.
pop() -- Removes the element on top of the stack.
top() -- Get the top element.
empty() -- Return whether the stack is empty.

Example:

MyStack stack = new MyStack();
stack.push(1);
stack.push(2);  
stack.top();   // returns 2
stack.pop();   // returns 2
stack.empty(); // returns false



Solution:
class MyStack(object):

    def __init__(self):
        self.li=[]
        
    def push(self, x):
        self.li.append(x)
        

    def pop(self):
        return self.li.pop()
        
    def top(self):
        return self.li[-1]

    def empty(self):
        return len(self.li)==0
        


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()
